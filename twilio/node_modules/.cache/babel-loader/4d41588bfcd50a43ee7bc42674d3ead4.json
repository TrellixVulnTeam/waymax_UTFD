{"ast":null,"code":"\"use strict\";\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _set = require(\"babel-runtime/core-js/set\");\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar logger_1 = require(\"../logger\");\n\nvar conversation_1 = require(\"../conversation\");\n\nexports.Conversation = conversation_1.Conversation;\n\nvar deferred_1 = require(\"../util/deferred\");\n\nvar util_1 = require(\"../util\");\n\nvar log = logger_1.Logger.scope('Conversations');\n/**\n * Represents conversations collection\n * {@see Conversation}\n */\n\nvar Conversations = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Conversations, _events_1$EventEmitte);\n\n  function Conversations(services) {\n    (0, _classCallCheck3.default)(this, Conversations);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Conversations.__proto__ || (0, _getPrototypeOf2.default)(Conversations)).call(this));\n\n    _this.services = services;\n    _this.conversations = new _map2.default();\n    _this.thumbstones = new _set2.default();\n    _this.syncListFetched = false;\n    _this.syncListRead = new deferred_1.Deferred();\n    return _this;\n  }\n\n  (0, _createClass3.default)(Conversations, [{\n    key: \"getMap\",\n    value: function getMap() {\n      var _this2 = this;\n\n      return this.services.session.getMyConversationsId().then(function (name) {\n        return _this2.services.syncClient.map({\n          id: name,\n          mode: 'open_existing'\n        });\n      });\n    }\n    /**\n     * Add conversation to server\n     * @private\n     * @returns {Promise<Conversation>} Conversation\n     */\n\n  }, {\n    key: \"addConversation\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n        var attributes, response, conversationSid, conversationDocument, existingConversation, conversation;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                attributes = void 0;\n\n                if (typeof options.attributes === 'undefined') {\n                  attributes = {};\n                } else {\n                  attributes = options.attributes;\n                }\n\n                _context.next = 4;\n                return this.services.session.addCommand('createConversation', {\n                  friendlyName: options.friendlyName,\n                  uniqueName: options.uniqueName,\n                  attributes: (0, _stringify2.default)(attributes)\n                });\n\n              case 4:\n                response = _context.sent;\n                conversationSid = 'conversationSid' in response ? response['conversationSid'] : null;\n                conversationDocument = 'conversation' in response ? response['conversation'] : null;\n                existingConversation = this.conversations.get(conversationSid);\n\n                if (!existingConversation) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 11;\n                return existingConversation._subscribe();\n\n              case 11:\n                return _context.abrupt(\"return\", existingConversation);\n\n              case 12:\n                conversation = new conversation_1.Conversation(this.services, {\n                  channel: conversationDocument,\n                  entityName: null,\n                  uniqueName: null,\n                  attributes: null,\n                  createdBy: null,\n                  friendlyName: null,\n                  lastConsumedMessageIndex: null,\n                  dateCreated: null,\n                  dateUpdated: null\n                }, conversationSid);\n                this.conversations.set(conversation.sid, conversation);\n                this.registerForEvents(conversation);\n                _context.next = 17;\n                return conversation._subscribe();\n\n              case 17:\n                this.emit('conversationAdded', conversation);\n                return _context.abrupt(\"return\", conversation);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addConversation(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return addConversation;\n    }()\n    /**\n     * Fetch conversations list and instantiate all necessary objects\n     */\n\n  }, {\n    key: \"fetchConversations\",\n    value: function fetchConversations() {\n      var _this3 = this;\n\n      this.getMap().then(function () {\n        var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(map) {\n          var upserts, paginator, items;\n          return _regenerator2.default.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  map.on('itemAdded', function (args) {\n                    log.debug('itemAdded: ' + args.item.key);\n\n                    _this3.upsertConversation('sync', args.item.key, args.item.data);\n                  });\n                  map.on('itemRemoved', function (args) {\n                    log.debug('itemRemoved: ' + args.key);\n                    var sid = args.key;\n\n                    if (!_this3.syncListFetched) {\n                      _this3.thumbstones.add(sid);\n                    }\n\n                    var conversation = _this3.conversations.get(sid);\n\n                    if (conversation) {\n                      if (conversation && conversation.status === 'joined'\n                      /*|| conversation.status === 'invited'*/\n                      ) {\n                        conversation._setStatus('notParticipating', 'sync');\n\n                        _this3.emit('conversationLeft', conversation);\n                      }\n\n                      _this3.conversations.delete(sid);\n\n                      _this3.emit('conversationRemoved', conversation);\n\n                      conversation.emit('removed', conversation);\n                    }\n                  });\n                  map.on('itemUpdated', function (args) {\n                    log.debug('itemUpdated: ' + args.item.key);\n\n                    _this3.upsertConversation('sync', args.item.key, args.item.data);\n                  });\n                  upserts = [];\n                  _context2.next = 6;\n                  return _this3.services.syncList.getPage();\n\n                case 6:\n                  paginator = _context2.sent;\n                  items = paginator.items;\n                  items.forEach(function (item) {\n                    upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                  });\n\n                case 9:\n                  if (!paginator.hasNextPage) {\n                    _context2.next = 16;\n                    break;\n                  }\n\n                  _context2.next = 12;\n                  return paginator.nextPage();\n\n                case 12:\n                  paginator = _context2.sent;\n                  paginator.items.forEach(function (item) {\n                    upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 16:\n                  _this3.syncListRead.set(true);\n\n                  return _context2.abrupt(\"return\", _promise2.default.all(upserts));\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, _this3);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).then(function () {\n        _this3.syncListFetched = true;\n\n        _this3.thumbstones.clear();\n\n        log.debug('Conversations list fetched');\n      }).then(function () {\n        return _this3;\n      }).catch(function (e) {\n        if (_this3.services.syncClient.connectionState != 'disconnected') {\n          log.error('Failed to get conversations list', e);\n        }\n\n        log.debug('ERROR: Failed to get conversations list', e);\n        throw e;\n      });\n    }\n  }, {\n    key: \"_wrapPaginator\",\n    value: function _wrapPaginator(page, op) {\n      var _this4 = this;\n\n      return op(page.items).then(function (items) {\n        return {\n          items: items,\n          hasNextPage: page.hasNextPage,\n          hasPrevPage: page.hasPrevPage,\n          nextPage: function nextPage() {\n            return page.nextPage().then(function (x) {\n              return _this4._wrapPaginator(x, op);\n            });\n          },\n          prevPage: function prevPage() {\n            return page.prevPage().then(function (x) {\n              return _this4._wrapPaginator(x, op);\n            });\n          }\n        };\n      });\n    }\n  }, {\n    key: \"getConversations\",\n    value: function getConversations(args) {\n      var _this5 = this;\n\n      return this.getMap().then(function (conversationsMap) {\n        return conversationsMap.getItems(args);\n      }).then(function (page) {\n        return _this5._wrapPaginator(page, function (items) {\n          return _promise2.default.all(items.map(function (item) {\n            return _this5.upsertConversation('sync', item.key, item.data);\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"getConversation\",\n    value: function getConversation(sid) {\n      var _this6 = this;\n\n      return this.getMap().then(function (conversationsMap) {\n        return conversationsMap.getItems({\n          key: sid\n        });\n      }).then(function (page) {\n        return page.items.map(function (item) {\n          return _this6.upsertConversation('sync', item.key, item.data);\n        });\n      }).then(function (items) {\n        return items.length > 0 ? items[0] : null;\n      });\n    }\n  }, {\n    key: \"getConversationByUniqueName\",\n    value: function () {\n      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(uniqueName) {\n        var _a, _b, links, url, response, body, sid, data;\n\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.services.session.getSessionLinks();\n\n              case 2:\n                links = _context3.sent;\n                url = new util_1.UriBuilder(links.myChannelsUrl).path(uniqueName).build();\n                _context3.next = 6;\n                return this.services.network.get(url);\n\n              case 6:\n                response = _context3.sent;\n                body = response.body;\n                sid = body.channel_sid;\n                data = {\n                  entityName: null,\n                  lastConsumedMessageIndex: body.last_consumed_message_index,\n                  status: ((_a = body) === null || _a === void 0 ? void 0 : _a.status) || 'unknown',\n                  friendlyName: body.friendly_name,\n                  dateUpdated: body.date_updated,\n                  dateCreated: body.date_created,\n                  uniqueName: body.unique_name,\n                  createdBy: body.created_by,\n                  attributes: body.attributes,\n                  channel: sid + \".channel\",\n                  notificationLevel: (_b = body) === null || _b === void 0 ? void 0 : _b.notification_level,\n                  sid: sid\n                };\n                return _context3.abrupt(\"return\", this.upsertConversation('sync', sid, data));\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getConversationByUniqueName(_x3) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getConversationByUniqueName;\n    }()\n  }, {\n    key: \"getWhisperConversation\",\n    value: function () {\n      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(sid) {\n        var _a, _b, _c, _d, links, url, response, body, state, data;\n\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.services.session.getSessionLinks();\n\n              case 2:\n                links = _context4.sent;\n                url = new util_1.UriBuilder(links.publicChannelsUrl).path(sid).build();\n                _context4.next = 6;\n                return this.services.network.get(url);\n\n              case 6:\n                response = _context4.sent;\n                body = response.body;\n\n                if (!(body.type !== 'private')) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 10:\n                // todo: refactor this after the back-end change.\n                // Currently, a conversation that is created using a non-conversations-specific\n                // endpoint (i.e., a chat-specific endpoint) will not have a state property set.\n                // The back-end team will fix this, but only when they get some more time to work\n                // on this. For now, the SDK will assume that the default state is active when\n                // the property is absent from the REST response. The back-end team also mentioned\n                // that the state property will become a proper JSON object, as opposed to a JSON\n                // string, which is also covered in the following code.\n                state = void 0; // If the state property is a string, it's expected to be a string that represents\n                // a JSON object.\n\n                if (typeof body.state === 'string') {\n                  state = JSON.parse(body.state);\n                } // If the state property is already a non-nullable object, then no JSON parsing is\n                // required.\n\n\n                if ((0, _typeof3.default)(body.state) === 'object' && body.state !== null) {\n                  state = body.state;\n                }\n\n                if (!(((_b = (_a = state) === null || _a === void 0 ? void 0 : _a['state.v1']) === null || _b === void 0 ? void 0 : _b.current) === 'closed')) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 15:\n                data = {\n                  entityName: null,\n                  lastConsumedMessageIndex: body.last_consumed_message_index,\n                  status: ((_c = body) === null || _c === void 0 ? void 0 : _c.status) || 'unknown',\n                  friendlyName: body.friendly_name,\n                  dateUpdated: body.date_updated,\n                  dateCreated: body.date_created,\n                  uniqueName: body.unique_name,\n                  createdBy: body.created_by,\n                  attributes: body.attributes,\n                  channel: sid + \".channel\",\n                  notificationLevel: (_d = body) === null || _d === void 0 ? void 0 : _d.notification_level,\n                  sid: sid\n                };\n                return _context4.abrupt(\"return\", this.upsertConversation('sync', sid, data));\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getWhisperConversation(_x4) {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getWhisperConversation;\n    }()\n  }, {\n    key: \"upsertConversation\",\n    value: function upsertConversation(source, sid, data) {\n      var _this7 = this;\n\n      log.trace('upsertConversation(sid=' + sid + ', data=', data);\n      var conversation = this.conversations.get(sid); // Update the Conversation's status if we know about it\n\n      if (conversation) {\n        log.trace('upsertConversation: conversation ' + sid + ' is known and it\\'s' + ' status is known from source ' + conversation._statusSource() + ' and update came from source ' + source, conversation);\n\n        if (typeof conversation._statusSource() === 'undefined' || source === conversation._statusSource() || source === 'synclist' && conversation._statusSource() !== 'sync' || source === 'sync') {\n          if (data.status === 'joined' && conversation.status !== 'joined') {\n            conversation._setStatus('joined', source);\n\n            var updateData = {};\n\n            if (typeof data.notificationLevel !== 'undefined') {\n              updateData.notificationLevel = data.notificationLevel;\n            }\n\n            if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n              updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n            }\n\n            if (!util_1.isDeepEqual(updateData, {})) {\n              conversation._update(updateData);\n            }\n\n            conversation._subscribe().then(function () {\n              _this7.emit('conversationJoined', conversation);\n            });\n          } else if (data.status === 'notParticipating' && conversation.status === 'joined') {\n            conversation._setStatus('notParticipating', source);\n\n            conversation._update(data);\n\n            conversation._subscribe().then(function () {\n              _this7.emit('conversationLeft', conversation);\n            });\n          } else if (data.status === 'notParticipating') {\n            conversation._subscribe();\n          } else {\n            conversation._update(data);\n          }\n        } else {\n          log.trace('upsertConversation: conversation is known from sync and came from chat, ignoring', {\n            sid: sid,\n            data: data.status,\n            conversation: conversation.status\n          });\n        }\n\n        return conversation._subscribe().then(function () {\n          return conversation;\n        });\n      }\n\n      if ((source === 'chat' || source === 'synclist') && this.thumbstones.has(sid)) {\n        // if conversation was deleted, we ignore it\n        log.trace('upsertConversation: conversation is deleted and came again from chat, ignoring', sid);\n        return;\n      } // Fetch the Conversation if we don't know about it\n\n\n      log.trace('upsertConversation: creating local conversation object with sid ' + sid, data);\n      conversation = new conversation_1.Conversation(this.services, data, sid);\n      this.conversations.set(sid, conversation);\n      return conversation._subscribe().then(function () {\n        _this7.registerForEvents(conversation);\n\n        _this7.emit('conversationAdded', conversation);\n\n        if (data.status === 'joined') {\n          conversation._setStatus('joined', source);\n\n          _this7.emit('conversationJoined', conversation);\n        }\n\n        return conversation;\n      });\n    }\n  }, {\n    key: \"onConversationRemoved\",\n    value: function onConversationRemoved(sid) {\n      var conversation = this.conversations.get(sid);\n\n      if (conversation) {\n        this.conversations.delete(sid);\n        this.emit('conversationRemoved', conversation);\n      }\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(conversation) {\n      var _this8 = this;\n\n      conversation.on('removed', function () {\n        return _this8.onConversationRemoved(conversation.sid);\n      });\n      conversation.on('updated', function (args) {\n        return _this8.emit('conversationUpdated', args);\n      });\n      conversation.on('participantJoined', this.emit.bind(this, 'participantJoined'));\n      conversation.on('participantLeft', this.emit.bind(this, 'participantLeft'));\n      conversation.on('participantUpdated', function (args) {\n        return _this8.emit('participantUpdated', args);\n      });\n      conversation.on('messageAdded', this.emit.bind(this, 'messageAdded'));\n      conversation.on('messageUpdated', function (args) {\n        return _this8.emit('messageUpdated', args);\n      });\n      conversation.on('messageRemoved', this.emit.bind(this, 'messageRemoved'));\n      conversation.on('typingStarted', this.emit.bind(this, 'typingStarted'));\n      conversation.on('typingEnded', this.emit.bind(this, 'typingEnded'));\n    }\n  }]);\n  return Conversations;\n}(events_1.EventEmitter);\n\nexports.Conversations = Conversations;","map":{"version":3,"sources":["/Users/abdulkhan/Documents/waymax/Waymax/node_modules/@twilio/conversations/browser/data/conversations.js"],"names":["_typeof2","require","_typeof3","_interopRequireDefault","_promise","_promise2","_regenerator","_regenerator2","_stringify","_stringify2","_asyncToGenerator2","_asyncToGenerator3","_set","_set2","_map","_map2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","events_1","logger_1","conversation_1","Conversation","deferred_1","util_1","log","Logger","scope","Conversations","_events_1$EventEmitte","services","_this","__proto__","call","conversations","thumbstones","syncListFetched","syncListRead","Deferred","key","getMap","_this2","session","getMyConversationsId","then","name","syncClient","map","id","mode","_ref","mark","_callee","options","attributes","response","conversationSid","conversationDocument","existingConversation","conversation","wrap","_callee$","_context","prev","next","addCommand","friendlyName","uniqueName","sent","get","_subscribe","abrupt","channel","entityName","createdBy","lastConsumedMessageIndex","dateCreated","dateUpdated","set","sid","registerForEvents","emit","stop","addConversation","_x","apply","arguments","fetchConversations","_this3","_ref2","_callee2","upserts","paginator","items","_callee2$","_context2","on","args","debug","item","upsertConversation","data","add","status","_setStatus","delete","syncList","getPage","forEach","push","channel_sid","hasNextPage","nextPage","all","_x2","clear","catch","e","connectionState","error","_wrapPaginator","page","op","_this4","hasPrevPage","x","prevPage","getConversations","_this5","conversationsMap","getItems","getConversation","_this6","length","_ref3","_callee3","_a","_b","links","url","body","_callee3$","_context3","getSessionLinks","UriBuilder","myChannelsUrl","path","build","network","last_consumed_message_index","friendly_name","date_updated","date_created","unique_name","created_by","notificationLevel","notification_level","getConversationByUniqueName","_x3","_ref4","_callee4","_c","_d","state","_callee4$","_context4","publicChannelsUrl","type","JSON","parse","current","getWhisperConversation","_x4","source","_this7","trace","_statusSource","updateData","isDeepEqual","_update","has","onConversationRemoved","_this8","bind","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _set = require(\"babel-runtime/core-js/set\");\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar logger_1 = require(\"../logger\");\nvar conversation_1 = require(\"../conversation\");\nexports.Conversation = conversation_1.Conversation;\nvar deferred_1 = require(\"../util/deferred\");\nvar util_1 = require(\"../util\");\nvar log = logger_1.Logger.scope('Conversations');\n/**\n * Represents conversations collection\n * {@see Conversation}\n */\n\nvar Conversations = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Conversations, _events_1$EventEmitte);\n\n    function Conversations(services) {\n        (0, _classCallCheck3.default)(this, Conversations);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Conversations.__proto__ || (0, _getPrototypeOf2.default)(Conversations)).call(this));\n\n        _this.services = services;\n        _this.conversations = new _map2.default();\n        _this.thumbstones = new _set2.default();\n        _this.syncListFetched = false;\n        _this.syncListRead = new deferred_1.Deferred();\n        return _this;\n    }\n\n    (0, _createClass3.default)(Conversations, [{\n        key: \"getMap\",\n        value: function getMap() {\n            var _this2 = this;\n\n            return this.services.session.getMyConversationsId().then(function (name) {\n                return _this2.services.syncClient.map({ id: name, mode: 'open_existing' });\n            });\n        }\n        /**\n         * Add conversation to server\n         * @private\n         * @returns {Promise<Conversation>} Conversation\n         */\n\n    }, {\n        key: \"addConversation\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n                var attributes, response, conversationSid, conversationDocument, existingConversation, conversation;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                attributes = void 0;\n\n                                if (typeof options.attributes === 'undefined') {\n                                    attributes = {};\n                                } else {\n                                    attributes = options.attributes;\n                                }\n                                _context.next = 4;\n                                return this.services.session.addCommand('createConversation', {\n                                    friendlyName: options.friendlyName,\n                                    uniqueName: options.uniqueName,\n                                    attributes: (0, _stringify2.default)(attributes)\n                                });\n\n                            case 4:\n                                response = _context.sent;\n                                conversationSid = 'conversationSid' in response ? response['conversationSid'] : null;\n                                conversationDocument = 'conversation' in response ? response['conversation'] : null;\n                                existingConversation = this.conversations.get(conversationSid);\n\n                                if (!existingConversation) {\n                                    _context.next = 12;\n                                    break;\n                                }\n\n                                _context.next = 11;\n                                return existingConversation._subscribe();\n\n                            case 11:\n                                return _context.abrupt(\"return\", existingConversation);\n\n                            case 12:\n                                conversation = new conversation_1.Conversation(this.services, {\n                                    channel: conversationDocument,\n                                    entityName: null,\n                                    uniqueName: null,\n                                    attributes: null,\n                                    createdBy: null,\n                                    friendlyName: null,\n                                    lastConsumedMessageIndex: null,\n                                    dateCreated: null,\n                                    dateUpdated: null\n                                }, conversationSid);\n\n                                this.conversations.set(conversation.sid, conversation);\n                                this.registerForEvents(conversation);\n                                _context.next = 17;\n                                return conversation._subscribe();\n\n                            case 17:\n                                this.emit('conversationAdded', conversation);\n                                return _context.abrupt(\"return\", conversation);\n\n                            case 19:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function addConversation(_x) {\n                return _ref.apply(this, arguments);\n            }\n\n            return addConversation;\n        }()\n        /**\n         * Fetch conversations list and instantiate all necessary objects\n         */\n\n    }, {\n        key: \"fetchConversations\",\n        value: function fetchConversations() {\n            var _this3 = this;\n\n            this.getMap().then(function () {\n                var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(map) {\n                    var upserts, paginator, items;\n                    return _regenerator2.default.wrap(function _callee2$(_context2) {\n                        while (1) {\n                            switch (_context2.prev = _context2.next) {\n                                case 0:\n                                    map.on('itemAdded', function (args) {\n                                        log.debug('itemAdded: ' + args.item.key);\n                                        _this3.upsertConversation('sync', args.item.key, args.item.data);\n                                    });\n                                    map.on('itemRemoved', function (args) {\n                                        log.debug('itemRemoved: ' + args.key);\n                                        var sid = args.key;\n                                        if (!_this3.syncListFetched) {\n                                            _this3.thumbstones.add(sid);\n                                        }\n                                        var conversation = _this3.conversations.get(sid);\n                                        if (conversation) {\n                                            if (conversation && conversation.status === 'joined' /*|| conversation.status === 'invited'*/) {\n                                                    conversation._setStatus('notParticipating', 'sync');\n                                                    _this3.emit('conversationLeft', conversation);\n                                                }\n                                            _this3.conversations.delete(sid);\n                                            _this3.emit('conversationRemoved', conversation);\n                                            conversation.emit('removed', conversation);\n                                        }\n                                    });\n                                    map.on('itemUpdated', function (args) {\n                                        log.debug('itemUpdated: ' + args.item.key);\n                                        _this3.upsertConversation('sync', args.item.key, args.item.data);\n                                    });\n                                    upserts = [];\n                                    _context2.next = 6;\n                                    return _this3.services.syncList.getPage();\n\n                                case 6:\n                                    paginator = _context2.sent;\n                                    items = paginator.items;\n\n                                    items.forEach(function (item) {\n                                        upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                                    });\n\n                                case 9:\n                                    if (!paginator.hasNextPage) {\n                                        _context2.next = 16;\n                                        break;\n                                    }\n\n                                    _context2.next = 12;\n                                    return paginator.nextPage();\n\n                                case 12:\n                                    paginator = _context2.sent;\n\n                                    paginator.items.forEach(function (item) {\n                                        upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                                    });\n                                    _context2.next = 9;\n                                    break;\n\n                                case 16:\n                                    _this3.syncListRead.set(true);\n                                    return _context2.abrupt(\"return\", _promise2.default.all(upserts));\n\n                                case 18:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2, _this3);\n                }));\n\n                return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                };\n            }()).then(function () {\n                _this3.syncListFetched = true;\n                _this3.thumbstones.clear();\n                log.debug('Conversations list fetched');\n            }).then(function () {\n                return _this3;\n            }).catch(function (e) {\n                if (_this3.services.syncClient.connectionState != 'disconnected') {\n                    log.error('Failed to get conversations list', e);\n                }\n                log.debug('ERROR: Failed to get conversations list', e);\n                throw e;\n            });\n        }\n    }, {\n        key: \"_wrapPaginator\",\n        value: function _wrapPaginator(page, op) {\n            var _this4 = this;\n\n            return op(page.items).then(function (items) {\n                return {\n                    items: items,\n                    hasNextPage: page.hasNextPage,\n                    hasPrevPage: page.hasPrevPage,\n                    nextPage: function nextPage() {\n                        return page.nextPage().then(function (x) {\n                            return _this4._wrapPaginator(x, op);\n                        });\n                    },\n                    prevPage: function prevPage() {\n                        return page.prevPage().then(function (x) {\n                            return _this4._wrapPaginator(x, op);\n                        });\n                    }\n                };\n            });\n        }\n    }, {\n        key: \"getConversations\",\n        value: function getConversations(args) {\n            var _this5 = this;\n\n            return this.getMap().then(function (conversationsMap) {\n                return conversationsMap.getItems(args);\n            }).then(function (page) {\n                return _this5._wrapPaginator(page, function (items) {\n                    return _promise2.default.all(items.map(function (item) {\n                        return _this5.upsertConversation('sync', item.key, item.data);\n                    }));\n                });\n            });\n        }\n    }, {\n        key: \"getConversation\",\n        value: function getConversation(sid) {\n            var _this6 = this;\n\n            return this.getMap().then(function (conversationsMap) {\n                return conversationsMap.getItems({ key: sid });\n            }).then(function (page) {\n                return page.items.map(function (item) {\n                    return _this6.upsertConversation('sync', item.key, item.data);\n                });\n            }).then(function (items) {\n                return items.length > 0 ? items[0] : null;\n            });\n        }\n    }, {\n        key: \"getConversationByUniqueName\",\n        value: function () {\n            var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(uniqueName) {\n                var _a, _b, links, url, response, body, sid, data;\n\n                return _regenerator2.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return this.services.session.getSessionLinks();\n\n                            case 2:\n                                links = _context3.sent;\n                                url = new util_1.UriBuilder(links.myChannelsUrl).path(uniqueName).build();\n                                _context3.next = 6;\n                                return this.services.network.get(url);\n\n                            case 6:\n                                response = _context3.sent;\n                                body = response.body;\n                                sid = body.channel_sid;\n                                data = {\n                                    entityName: null,\n                                    lastConsumedMessageIndex: body.last_consumed_message_index,\n                                    status: ((_a = body) === null || _a === void 0 ? void 0 : _a.status) || 'unknown',\n                                    friendlyName: body.friendly_name,\n                                    dateUpdated: body.date_updated,\n                                    dateCreated: body.date_created,\n                                    uniqueName: body.unique_name,\n                                    createdBy: body.created_by,\n                                    attributes: body.attributes,\n                                    channel: sid + \".channel\",\n                                    notificationLevel: (_b = body) === null || _b === void 0 ? void 0 : _b.notification_level,\n                                    sid: sid\n                                };\n                                return _context3.abrupt(\"return\", this.upsertConversation('sync', sid, data));\n\n                            case 11:\n                            case \"end\":\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            function getConversationByUniqueName(_x3) {\n                return _ref3.apply(this, arguments);\n            }\n\n            return getConversationByUniqueName;\n        }()\n    }, {\n        key: \"getWhisperConversation\",\n        value: function () {\n            var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(sid) {\n                var _a, _b, _c, _d, links, url, response, body, state, data;\n\n                return _regenerator2.default.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return this.services.session.getSessionLinks();\n\n                            case 2:\n                                links = _context4.sent;\n                                url = new util_1.UriBuilder(links.publicChannelsUrl).path(sid).build();\n                                _context4.next = 6;\n                                return this.services.network.get(url);\n\n                            case 6:\n                                response = _context4.sent;\n                                body = response.body;\n\n                                if (!(body.type !== 'private')) {\n                                    _context4.next = 10;\n                                    break;\n                                }\n\n                                return _context4.abrupt(\"return\");\n\n                            case 10:\n                                // todo: refactor this after the back-end change.\n                                // Currently, a conversation that is created using a non-conversations-specific\n                                // endpoint (i.e., a chat-specific endpoint) will not have a state property set.\n                                // The back-end team will fix this, but only when they get some more time to work\n                                // on this. For now, the SDK will assume that the default state is active when\n                                // the property is absent from the REST response. The back-end team also mentioned\n                                // that the state property will become a proper JSON object, as opposed to a JSON\n                                // string, which is also covered in the following code.\n                                state = void 0;\n                                // If the state property is a string, it's expected to be a string that represents\n                                // a JSON object.\n\n                                if (typeof body.state === 'string') {\n                                    state = JSON.parse(body.state);\n                                }\n                                // If the state property is already a non-nullable object, then no JSON parsing is\n                                // required.\n                                if ((0, _typeof3.default)(body.state) === 'object' && body.state !== null) {\n                                    state = body.state;\n                                }\n\n                                if (!(((_b = (_a = state) === null || _a === void 0 ? void 0 : _a['state.v1']) === null || _b === void 0 ? void 0 : _b.current) === 'closed')) {\n                                    _context4.next = 15;\n                                    break;\n                                }\n\n                                return _context4.abrupt(\"return\");\n\n                            case 15:\n                                data = {\n                                    entityName: null,\n                                    lastConsumedMessageIndex: body.last_consumed_message_index,\n                                    status: ((_c = body) === null || _c === void 0 ? void 0 : _c.status) || 'unknown',\n                                    friendlyName: body.friendly_name,\n                                    dateUpdated: body.date_updated,\n                                    dateCreated: body.date_created,\n                                    uniqueName: body.unique_name,\n                                    createdBy: body.created_by,\n                                    attributes: body.attributes,\n                                    channel: sid + \".channel\",\n                                    notificationLevel: (_d = body) === null || _d === void 0 ? void 0 : _d.notification_level,\n                                    sid: sid\n                                };\n                                return _context4.abrupt(\"return\", this.upsertConversation('sync', sid, data));\n\n                            case 17:\n                            case \"end\":\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            }));\n\n            function getWhisperConversation(_x4) {\n                return _ref4.apply(this, arguments);\n            }\n\n            return getWhisperConversation;\n        }()\n    }, {\n        key: \"upsertConversation\",\n        value: function upsertConversation(source, sid, data) {\n            var _this7 = this;\n\n            log.trace('upsertConversation(sid=' + sid + ', data=', data);\n            var conversation = this.conversations.get(sid);\n            // Update the Conversation's status if we know about it\n            if (conversation) {\n                log.trace('upsertConversation: conversation ' + sid + ' is known and it\\'s' + ' status is known from source ' + conversation._statusSource() + ' and update came from source ' + source, conversation);\n                if (typeof conversation._statusSource() === 'undefined' || source === conversation._statusSource() || source === 'synclist' && conversation._statusSource() !== 'sync' || source === 'sync') {\n                    if (data.status === 'joined' && conversation.status !== 'joined') {\n                        conversation._setStatus('joined', source);\n                        var updateData = {};\n                        if (typeof data.notificationLevel !== 'undefined') {\n                            updateData.notificationLevel = data.notificationLevel;\n                        }\n                        if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n                            updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n                        }\n                        if (!util_1.isDeepEqual(updateData, {})) {\n                            conversation._update(updateData);\n                        }\n                        conversation._subscribe().then(function () {\n                            _this7.emit('conversationJoined', conversation);\n                        });\n                    } else if (data.status === 'notParticipating' && conversation.status === 'joined') {\n                        conversation._setStatus('notParticipating', source);\n                        conversation._update(data);\n                        conversation._subscribe().then(function () {\n                            _this7.emit('conversationLeft', conversation);\n                        });\n                    } else if (data.status === 'notParticipating') {\n                        conversation._subscribe();\n                    } else {\n                        conversation._update(data);\n                    }\n                } else {\n                    log.trace('upsertConversation: conversation is known from sync and came from chat, ignoring', {\n                        sid: sid,\n                        data: data.status,\n                        conversation: conversation.status\n                    });\n                }\n                return conversation._subscribe().then(function () {\n                    return conversation;\n                });\n            }\n            if ((source === 'chat' || source === 'synclist') && this.thumbstones.has(sid)) {\n                // if conversation was deleted, we ignore it\n                log.trace('upsertConversation: conversation is deleted and came again from chat, ignoring', sid);\n                return;\n            }\n            // Fetch the Conversation if we don't know about it\n            log.trace('upsertConversation: creating local conversation object with sid ' + sid, data);\n            conversation = new conversation_1.Conversation(this.services, data, sid);\n            this.conversations.set(sid, conversation);\n            return conversation._subscribe().then(function () {\n                _this7.registerForEvents(conversation);\n                _this7.emit('conversationAdded', conversation);\n                if (data.status === 'joined') {\n                    conversation._setStatus('joined', source);\n                    _this7.emit('conversationJoined', conversation);\n                }\n                return conversation;\n            });\n        }\n    }, {\n        key: \"onConversationRemoved\",\n        value: function onConversationRemoved(sid) {\n            var conversation = this.conversations.get(sid);\n            if (conversation) {\n                this.conversations.delete(sid);\n                this.emit('conversationRemoved', conversation);\n            }\n        }\n    }, {\n        key: \"registerForEvents\",\n        value: function registerForEvents(conversation) {\n            var _this8 = this;\n\n            conversation.on('removed', function () {\n                return _this8.onConversationRemoved(conversation.sid);\n            });\n            conversation.on('updated', function (args) {\n                return _this8.emit('conversationUpdated', args);\n            });\n            conversation.on('participantJoined', this.emit.bind(this, 'participantJoined'));\n            conversation.on('participantLeft', this.emit.bind(this, 'participantLeft'));\n            conversation.on('participantUpdated', function (args) {\n                return _this8.emit('participantUpdated', args);\n            });\n            conversation.on('messageAdded', this.emit.bind(this, 'messageAdded'));\n            conversation.on('messageUpdated', function (args) {\n                return _this8.emit('messageUpdated', args);\n            });\n            conversation.on('messageRemoved', this.emit.bind(this, 'messageRemoved'));\n            conversation.on('typingStarted', this.emit.bind(this, 'typingStarted'));\n            conversation.on('typingEnded', this.emit.bind(this, 'typingEnded'));\n        }\n    }]);\n    return Conversations;\n}(events_1.EventEmitter);\n\nexports.Conversations = Conversations;"]},"metadata":{},"sourceType":"script"}