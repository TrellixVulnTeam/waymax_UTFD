{"ast":null,"code":"var _jsxFileName = \"/Users/abdulkhan/Documents/waymax/Waymax/twilio/src/ConversationsApp.js\";\nimport React from \"react\";\nimport { Badge, Icon, Layout, Spin, Typography } from \"antd\";\nimport { Client as ConversationsClient } from \"@twilio/conversations\";\nimport \"./assets/Conversation.css\";\nimport \"./assets/ConversationSection.css\";\nimport Logo from \"./assets/waymaxlogo.png\";\nimport Conversation from \"./Conversation\";\nimport LoginPage from \"./LoginPage\";\nimport { ConversationsList } from \"./ConversationsList\";\nimport { HeaderItem } from \"./HeaderItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Sider,\n  Header\n} = Layout;\nconst {\n  Text\n} = Typography;\n\nclass ConversationsApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.state.loggedIn) {\n        this.getToken();\n        this.setState({\n          statusString: \"Fetching credentials…\"\n        });\n      }\n    };\n\n    this.logIn = name => {\n      if (name !== \"\") {\n        localStorage.setItem(\"name\", name);\n        this.setState({\n          name,\n          loggedIn: true\n        }, this.getToken);\n      }\n    };\n\n    this.logOut = event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.setState({\n        name: \"\",\n        loggedIn: false,\n        token: \"\",\n        conversationsReady: false,\n        messages: [],\n        newMessage: \"\",\n        conversations: []\n      });\n      localStorage.removeItem(\"name\");\n      this.conversationsClient.shutdown();\n    };\n\n    this.getToken = () => {\n      // Paste your unique Chat token function\n      const myToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTSzdlNDBkNmYyZWQxZmE5M2YzNDI2NmQ2NTY1NDBkYTlhLTE2Mzc0ODAwMTkiLCJncmFudHMiOnsiaWRlbnRpdHkiOiJBYmR1bCIsImNoYXQiOnsic2VydmljZV9zaWQiOiJJUzM3NWMzMjgzODk3ZjRjN2RiOWZiNjc4MzQzZTRmZTk4In19LCJpYXQiOjE2Mzc0ODAwMTksImV4cCI6MTYzNzQ4MzYxOSwiaXNzIjoiU0s3ZTQwZDZmMmVkMWZhOTNmMzQyNjZkNjU2NTQwZGE5YSIsInN1YiI6IkFDYWVmNTYxM2YyYWEyZDEzMzA4OWVhNDg3MzllMDk3YmQifQ.s_H7-SXUi0n0dOX7vZzRDZlSzrfBD2O0Scr6paM79IU\";\n      this.setState({\n        token: myToken\n      }, this.initConversations);\n    };\n\n    this.initConversations = async () => {\n      window.conversationsClient = ConversationsClient;\n      this.conversationsClient = await ConversationsClient.create(this.state.token);\n      this.setState({\n        statusString: \"Connecting to Twilio…\"\n      });\n      this.conversationsClient.on(\"connectionStateChanged\", state => {\n        if (state === \"connecting\") this.setState({\n          statusString: \"Connecting to Twilio…\",\n          status: \"default\"\n        });\n\n        if (state === \"connected\") {\n          this.setState({\n            statusString: \"You are connected.\",\n            status: \"success\"\n          });\n        }\n\n        if (state === \"disconnecting\") this.setState({\n          statusString: \"Disconnecting from Twilio…\",\n          conversationsReady: false,\n          status: \"default\"\n        });\n        if (state === \"disconnected\") this.setState({\n          statusString: \"Disconnected.\",\n          conversationsReady: false,\n          status: \"warning\"\n        });\n        if (state === \"denied\") this.setState({\n          statusString: \"Failed to connect.\",\n          conversationsReady: false,\n          status: \"error\"\n        });\n      });\n      this.conversationsClient.on(\"conversationJoined\", conversation => {\n        this.setState({\n          conversations: [...this.state.conversations, conversation]\n        });\n      });\n      this.conversationsClient.on(\"conversationLeft\", thisConversation => {\n        this.setState({\n          conversations: [...this.state.conversations.filter(it => it !== thisConversation)]\n        });\n      });\n    };\n\n    const _name = localStorage.getItem(\"name\") || \"\";\n\n    const loggedIn = _name !== \"\";\n    this.state = {\n      name: _name,\n      loggedIn,\n      token: null,\n      statusString: null,\n      conversationsReady: false,\n      conversations: [],\n      selectedConversationSid: null,\n      newMessage: \"\"\n    };\n  }\n\n  render() {\n    const {\n      conversations,\n      selectedConversationSid,\n      status\n    } = this.state;\n    const selectedConversation = conversations.find(it => it.sid === selectedConversationSid);\n    let conversationContent;\n\n    if (selectedConversation) {\n      conversationContent = /*#__PURE__*/_jsxDEV(Conversation, {\n        conversationProxy: selectedConversation,\n        myIdentity: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this);\n    } else if (status !== \"success\") {\n      conversationContent = \"Loading your conversation!\";\n    } else {\n      conversationContent = \"\";\n    }\n\n    if (this.state.loggedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-window-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          className: \"conversations-window-container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                maxWidth: \"250px\",\n                width: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(HeaderItem, {\n                style: {\n                  \"margin-top\": \"50px\",\n                  display: \"flex\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Logo,\n                  className: \"logo-text\",\n                  alt: \"Logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                width: \"100%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(HeaderItem, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  strong: true,\n                  style: {\n                    color: \"white\"\n                  },\n                  children: selectedConversation && (selectedConversation.friendlyName || selectedConversation.sid)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Layout, {\n            children: [/*#__PURE__*/_jsxDEV(Sider, {\n              theme: \"light\",\n              width: 250,\n              children: /*#__PURE__*/_jsxDEV(ConversationsList, {\n                conversations: conversations,\n                selectedConversationSid: selectedConversationSid,\n                onConversationClick: item => {\n                  this.setState({\n                    selectedConversationSid: item.sid\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Content, {\n              className: \"conversation-section\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"SelectedConversation\",\n                children: conversationContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onSubmit: this.logIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default ConversationsApp;","map":{"version":3,"sources":["/Users/abdulkhan/Documents/waymax/Waymax/twilio/src/ConversationsApp.js"],"names":["React","Badge","Icon","Layout","Spin","Typography","Client","ConversationsClient","Logo","Conversation","LoginPage","ConversationsList","HeaderItem","Content","Sider","Header","Text","ConversationsApp","Component","constructor","props","componentDidMount","state","loggedIn","getToken","setState","statusString","logIn","name","localStorage","setItem","logOut","event","preventDefault","token","conversationsReady","messages","newMessage","conversations","removeItem","conversationsClient","shutdown","myToken","initConversations","window","create","on","status","conversation","thisConversation","filter","it","getItem","selectedConversationSid","render","selectedConversation","find","sid","conversationContent","display","alignItems","padding","maxWidth","width","color","friendlyName","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Badge, Icon, Layout, Spin, Typography } from \"antd\";\nimport { Client as ConversationsClient } from \"@twilio/conversations\";\n\nimport \"./assets/Conversation.css\";\nimport \"./assets/ConversationSection.css\";\nimport Logo from \"./assets/waymaxlogo.png\";\n\nimport Conversation from \"./Conversation\";\nimport LoginPage from \"./LoginPage\";\nimport { ConversationsList } from \"./ConversationsList\";\nimport { HeaderItem } from \"./HeaderItem\";\n\nconst { Content, Sider, Header } = Layout;\nconst { Text } = Typography;\n\nclass ConversationsApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const name = localStorage.getItem(\"name\") || \"\";\n    const loggedIn = name !== \"\";\n\n    this.state = {\n      name,\n      loggedIn,\n      token: null,\n      statusString: null,\n      conversationsReady: false,\n      conversations: [],\n      selectedConversationSid: null,\n      newMessage: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) {\n      this.getToken();\n      this.setState({ statusString: \"Fetching credentials…\" });\n    }\n  };\n\n  logIn = (name) => {\n    if (name !== \"\") {\n      localStorage.setItem(\"name\", name);\n      this.setState({ name, loggedIn: true }, this.getToken);\n    }\n  };\n\n  logOut = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState({\n      name: \"\",\n      loggedIn: false,\n      token: \"\",\n      conversationsReady: false,\n      messages: [],\n      newMessage: \"\",\n      conversations: []\n    });\n\n    localStorage.removeItem(\"name\");\n    this.conversationsClient.shutdown();\n  };\n\n  getToken = () => {\n    // Paste your unique Chat token function\n    const myToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTSzdlNDBkNmYyZWQxZmE5M2YzNDI2NmQ2NTY1NDBkYTlhLTE2Mzc0ODAwMTkiLCJncmFudHMiOnsiaWRlbnRpdHkiOiJBYmR1bCIsImNoYXQiOnsic2VydmljZV9zaWQiOiJJUzM3NWMzMjgzODk3ZjRjN2RiOWZiNjc4MzQzZTRmZTk4In19LCJpYXQiOjE2Mzc0ODAwMTksImV4cCI6MTYzNzQ4MzYxOSwiaXNzIjoiU0s3ZTQwZDZmMmVkMWZhOTNmMzQyNjZkNjU2NTQwZGE5YSIsInN1YiI6IkFDYWVmNTYxM2YyYWEyZDEzMzA4OWVhNDg3MzllMDk3YmQifQ.s_H7-SXUi0n0dOX7vZzRDZlSzrfBD2O0Scr6paM79IU\";\n    this.setState({ token: myToken }, this.initConversations);\n  };\n\n  initConversations = async () => {\n    window.conversationsClient = ConversationsClient;\n    this.conversationsClient = await ConversationsClient.create(\n      this.state.token\n    );\n    this.setState({ statusString: \"Connecting to Twilio…\" });\n\n    this.conversationsClient.on(\"connectionStateChanged\", (state) => {\n      if (state === \"connecting\")\n        this.setState({\n          statusString: \"Connecting to Twilio…\",\n          status: \"default\"\n        });\n      if (state === \"connected\") {\n        this.setState({\n          statusString: \"You are connected.\",\n          status: \"success\"\n        });\n      }\n      if (state === \"disconnecting\")\n        this.setState({\n          statusString: \"Disconnecting from Twilio…\",\n          conversationsReady: false,\n          status: \"default\"\n        });\n      if (state === \"disconnected\")\n        this.setState({\n          statusString: \"Disconnected.\",\n          conversationsReady: false,\n          status: \"warning\"\n        });\n      if (state === \"denied\")\n        this.setState({\n          statusString: \"Failed to connect.\",\n          conversationsReady: false,\n          status: \"error\"\n        });\n    });\n    this.conversationsClient.on(\"conversationJoined\", (conversation) => {\n      this.setState({\n        conversations: [...this.state.conversations, conversation]\n      });\n    });\n    this.conversationsClient.on(\"conversationLeft\", (thisConversation) => {\n      this.setState({\n        conversations: [\n          ...this.state.conversations.filter((it) => it !== thisConversation)\n        ]\n      });\n    });\n  };\n\n  render() {\n    const { conversations, selectedConversationSid, status } = this.state;\n    const selectedConversation = conversations.find(\n      (it) => it.sid === selectedConversationSid\n    );\n\n    let conversationContent;\n    if (selectedConversation) {\n      conversationContent = (\n        <Conversation\n          conversationProxy={selectedConversation}\n          myIdentity={this.state.name}\n        />\n      );\n    } else if (status !== \"success\") {\n      conversationContent = \"Loading your conversation!\";\n    } else {\n      conversationContent = \"\";\n    }\n\n    if (this.state.loggedIn) {\n      return (\n        <div className=\"conversations-window-wrapper\">\n          <Layout className=\"conversations-window-container\">\n            <Header\n              style={{ display: \"flex\", alignItems: \"center\", padding: 0 }}\n            >\n              <div\n                style={{\n                  maxWidth: \"250px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n              >\n                <HeaderItem style={{ \"margin-top\": \"50px\", display: \"flex\" }}>\n                <img src={Logo} className=\"logo-text\" alt=\"Logo\" />\n                </HeaderItem>\n            \n              </div>\n              <div style={{ display: \"flex\", width: \"100%\" }}>\n                <HeaderItem>\n                  <Text strong style={{ color: \"white\" }}>\n                    {selectedConversation &&\n                      (selectedConversation.friendlyName ||\n                        selectedConversation.sid)}\n                  </Text>\n                </HeaderItem>\n             \n                \n              </div>\n            </Header>\n            <Layout>\n              <Sider theme={\"light\"} width={250}>\n                <ConversationsList\n                  conversations={conversations}\n                  selectedConversationSid={selectedConversationSid}\n                  onConversationClick={(item) => {\n                    this.setState({ selectedConversationSid: item.sid });\n                  }}\n                />\n              </Sider>\n              <Content className=\"conversation-section\">\n                <div id=\"SelectedConversation\">{conversationContent}</div>\n              </Content>\n            </Layout>\n          </Layout>\n        </div>\n      );\n    }\n\n    return <LoginPage onSubmit={this.logIn} />;\n  }\n}\n\nexport default ConversationsApp;\n"]},"metadata":{},"sourceType":"module"}