{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @class\n * @classdesc Represents an individual element in a Sync List.\n * @alias ListItem\n * @property {Number} index The index, within the containing List, of this item. This index is stable;\n * even if lower-indexed Items are removed, this index will remain as is.\n * @property {Object} data The contents of the item.\n * @property {Date} dateUpdated Date when the List Item was last updated.\n */\n\nclass ListItem {\n  /**\n   * @private\n   * @constructor\n   * @param {Object} data Item descriptor\n   * @param {Number} data.index Item identifier\n   * @param {String} data.uri Item URI\n   * @param {Object} data.data Item data\n   */\n  constructor(data) {\n    this.descriptor = data;\n  }\n\n  get uri() {\n    return this.descriptor.uri;\n  }\n\n  get revision() {\n    return this.descriptor.revision;\n  }\n\n  get lastEventId() {\n    return this.descriptor.lastEventId;\n  }\n\n  get dateUpdated() {\n    return this.descriptor.dateUpdated;\n  }\n\n  get dateExpires() {\n    return this.descriptor.dateExpires;\n  }\n\n  get index() {\n    return this.descriptor.index;\n  }\n\n  get data() {\n    return this.descriptor.data;\n  }\n  /**\n   * @private\n   */\n\n\n  update(eventId, revision, data, dateUpdated) {\n    this.descriptor.lastEventId = eventId;\n    this.descriptor.revision = revision;\n    this.descriptor.data = data;\n    this.descriptor.dateUpdated = dateUpdated;\n    return this;\n  }\n  /**\n   * @private\n   */\n\n\n  updateDateExpires(dateExpires) {\n    this.descriptor.dateExpires = dateExpires;\n  }\n\n}\n\nexports.ListItem = ListItem;\nexports.default = ListItem;","map":{"version":3,"sources":["/Users/abdulkhan/Documents/waymax/Waymax/node_modules/twilio-sync/lib/listitem.js"],"names":["Object","defineProperty","exports","value","ListItem","constructor","data","descriptor","uri","revision","lastEventId","dateUpdated","dateExpires","index","update","eventId","updateDateExpires","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,CAAe;AACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKC,UAAL,GAAkBD,IAAlB;AACH;;AACM,MAAHE,GAAG,GAAG;AACN,WAAO,KAAKD,UAAL,CAAgBC,GAAvB;AACH;;AACW,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKF,UAAL,CAAgBE,QAAvB;AACH;;AACc,MAAXC,WAAW,GAAG;AACd,WAAO,KAAKH,UAAL,CAAgBG,WAAvB;AACH;;AACc,MAAXC,WAAW,GAAG;AACd,WAAO,KAAKJ,UAAL,CAAgBI,WAAvB;AACH;;AACc,MAAXC,WAAW,GAAG;AACd,WAAO,KAAKL,UAAL,CAAgBK,WAAvB;AACH;;AACQ,MAALC,KAAK,GAAG;AACR,WAAO,KAAKN,UAAL,CAAgBM,KAAvB;AACH;;AACO,MAAJP,IAAI,GAAG;AACP,WAAO,KAAKC,UAAL,CAAgBD,IAAvB;AACH;AACD;AACJ;AACA;;;AACIQ,EAAAA,MAAM,CAACC,OAAD,EAAUN,QAAV,EAAoBH,IAApB,EAA0BK,WAA1B,EAAuC;AACzC,SAAKJ,UAAL,CAAgBG,WAAhB,GAA8BK,OAA9B;AACA,SAAKR,UAAL,CAAgBE,QAAhB,GAA2BA,QAA3B;AACA,SAAKF,UAAL,CAAgBD,IAAhB,GAAuBA,IAAvB;AACA,SAAKC,UAAL,CAAgBI,WAAhB,GAA8BA,WAA9B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIK,EAAAA,iBAAiB,CAACJ,WAAD,EAAc;AAC3B,SAAKL,UAAL,CAAgBK,WAAhB,GAA8BA,WAA9B;AACH;;AAhDU;;AAkDfV,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACe,OAAR,GAAkBb,QAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @class\n * @classdesc Represents an individual element in a Sync List.\n * @alias ListItem\n * @property {Number} index The index, within the containing List, of this item. This index is stable;\n * even if lower-indexed Items are removed, this index will remain as is.\n * @property {Object} data The contents of the item.\n * @property {Date} dateUpdated Date when the List Item was last updated.\n */\nclass ListItem {\n    /**\n     * @private\n     * @constructor\n     * @param {Object} data Item descriptor\n     * @param {Number} data.index Item identifier\n     * @param {String} data.uri Item URI\n     * @param {Object} data.data Item data\n     */\n    constructor(data) {\n        this.descriptor = data;\n    }\n    get uri() {\n        return this.descriptor.uri;\n    }\n    get revision() {\n        return this.descriptor.revision;\n    }\n    get lastEventId() {\n        return this.descriptor.lastEventId;\n    }\n    get dateUpdated() {\n        return this.descriptor.dateUpdated;\n    }\n    get dateExpires() {\n        return this.descriptor.dateExpires;\n    }\n    get index() {\n        return this.descriptor.index;\n    }\n    get data() {\n        return this.descriptor.data;\n    }\n    /**\n     * @private\n     */\n    update(eventId, revision, data, dateUpdated) {\n        this.descriptor.lastEventId = eventId;\n        this.descriptor.revision = revision;\n        this.descriptor.data = data;\n        this.descriptor.dateUpdated = dateUpdated;\n        return this;\n    }\n    /**\n     * @private\n     */\n    updateDateExpires(dateExpires) {\n        this.descriptor.dateExpires = dateExpires;\n    }\n}\nexports.ListItem = ListItem;\nexports.default = ListItem;\n"]},"metadata":{},"sourceType":"script"}